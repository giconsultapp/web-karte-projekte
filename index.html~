<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="initial-scale=1,user-scalable=no,maximum-scale=1,width=device-width">
        <meta name="mobile-web-app-capable" content="yes">
        <meta name="apple-mobile-web-app-capable" content="yes">
        <link rel="stylesheet" href="css/leaflet.css">
        <link rel="stylesheet" href="css/qgis2web.css"><link rel="stylesheet" href="css/fontawesome-all.min.css">
        <link rel="stylesheet" href="css/MarkerCluster.css">
        <link rel="stylesheet" href="css/MarkerCluster.Default.css">
        <link rel="stylesheet" href="css/leaflet-search.css">
        <link rel="stylesheet" href="css/leaflet-control-geocoder.Geocoder.css">
        <style>
        html, body, #map {
            width: 100%;
            height: 100%;
            padding: 0;
            margin: 0;
        }
        </style>
        <title></title>
    </head>
    <body>
        <div id="map">
        </div>
        <script src="js/qgis2web_expressions.js"></script>
        <script src="js/leaflet.js"></script>
        <script src="js/leaflet.rotatedMarker.js"></script>
        <script src="js/leaflet.pattern.js"></script>
        <script src="js/leaflet-hash.js"></script>
        <script src="js/Autolinker.min.js"></script>
        <script src="js/rbush.min.js"></script>
        <script src="js/labelgun.min.js"></script>
        <script src="js/labels.js"></script>
        <script src="js/leaflet-control-geocoder.Geocoder.js"></script>
        <script src="js/leaflet.markercluster.js"></script>
        <script src="js/leaflet-search.js"></script>
        <script src="data/vg2500_bld_2.js"></script>
        <script src="data/Projekt_aktuell_linie_3.js"></script>
        <script src="data/Projekt_aktuell_punkt_4.js"></script>
        <script src="plugins/leaflet.snogylop.js"></script>
        <script>
        var highlightLayer;
        function highlightFeature(e) {
            highlightLayer = e.target;

            if (e.target.feature.geometry.type === 'LineString') {
              highlightLayer.setStyle({
                color: '#ffff00',
              });
            } else {
              highlightLayer.setStyle({
                fillColor: '#ffff00',
                fillOpacity: 1
              });
            }
        }
        var map = L.map('map', {
            zoomControl:true, maxZoom:24, minZoom:6
        }).fitBounds([[47.51641700657241,4.214943073930248],[61.89326383816825,46.90230580792365]]);
        var hash = new L.Hash(map);
        map.attributionControl.setPrefix('<a href="https://github.com/tomchadwin/qgis2web" target="_blank">qgis2web</a> &middot; <a href="https://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> &middot; <a href="https://qgis.org">QGIS</a>');
        var autolinker = new Autolinker({truncate: {length: 30, location: 'smart'}});
        var bounds_group = new L.featureGroup([]);
        function setBounds() {
        }
        map.createPane('pane_OpenStreetMap_0');
        map.getPane('pane_OpenStreetMap_0').style.zIndex = 400;
        var layer_OpenStreetMap_0 = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            pane: 'pane_OpenStreetMap_0',
            opacity: 1.0,
            attribution: '',
            minZoom: 6,
            maxZoom: 24,
            minNativeZoom: 0,
            maxNativeZoom: 19
        });
        layer_OpenStreetMap_0;
        map.addLayer(layer_OpenStreetMap_0);
        map.createPane('pane_OpenRailwayMap_1');
        map.getPane('pane_OpenRailwayMap_1').style.zIndex = 401;
        var layer_OpenRailwayMap_1 = L.tileLayer('https://a.tiles.openrailwaymap.org/standard/{z}/{x}/{y}.png', {
            pane: 'pane_OpenRailwayMap_1',
            opacity: 1.0,
            attribution: '',
            minZoom: 6,
            maxZoom: 24,
            minNativeZoom: 0,
            maxNativeZoom: 18
        });
        layer_OpenRailwayMap_1;
        map.addLayer(layer_OpenRailwayMap_1);
        function pop_vg2500_bld_2(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['USE'] !== null ? autolinker.link(feature.properties['USE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">RS</th>\
                        <td>' + (feature.properties['RS'] !== null ? autolinker.link(feature.properties['RS'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['RS_ALT'] !== null ? autolinker.link(feature.properties['RS_ALT'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['GEN'] !== null ? autolinker.link(feature.properties['GEN'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['SHAPE_LENG'] !== null ? autolinker.link(feature.properties['SHAPE_LENG'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['SHAPE_AREA'] !== null ? autolinker.link(feature.properties['SHAPE_AREA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_vg2500_bld_2_0() {
            return {
                pane: 'pane_vg2500_bld_2',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(101,101,101,0.5)',
                interactive: false,
            }
        }
        map.createPane('pane_vg2500_bld_2');
        map.getPane('pane_vg2500_bld_2').style.zIndex = 402;
        map.getPane('pane_vg2500_bld_2').style['mix-blend-mode'] = 'normal';
        var layer_vg2500_bld_2 = new L.geoJson(json_vg2500_bld_2, {
            attribution: '',
            invert: true,
            interactive: false,
            dataVar: 'json_vg2500_bld_2',
            layerName: 'layer_vg2500_bld_2',
            pane: 'pane_vg2500_bld_2',
            onEachFeature: pop_vg2500_bld_2,
            style: style_vg2500_bld_2_0,
        });
        bounds_group.addLayer(layer_vg2500_bld_2);
        

        map.addLayer(layer_vg2500_bld_2);
        function pop_Projekt_aktuell_linie_3(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">Streckennummer</th>\
                        <td>' + (feature.properties['Streckennummer'] !== null ? autolinker.link(feature.properties['Streckennummer'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Projektnummer</th>\
                        <td>' + (feature.properties['Projektnummer'] !== null ? autolinker.link(feature.properties['Projektnummer'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Auftraggeber</th>\
                        <td>' + (feature.properties['Auftraggeber'] !== null ? autolinker.link(feature.properties['Auftraggeber'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Auftragswert (netto)</th>\
                        <td>' + (feature.properties['Auftragswert (netto)'] !== null ? autolinker.link(feature.properties['Auftragswert (netto)'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Datum</th>\
                        <td>' + (feature.properties['Datum'] !== null ? autolinker.link(feature.properties['Datum'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Kilometer (von - bis)</th>\
                        <td>' + (feature.properties['Kilometer (von - bis)'] !== null ? autolinker.link(feature.properties['Kilometer (von - bis)'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Projektbezeichnung</th>\
                        <td>' + (feature.properties['Projektbezeichnung'] !== null ? autolinker.link(feature.properties['Projektbezeichnung'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Projekt_aktuell_linie_3_0() {
            return {
                pane: 'pane_Projekt_aktuell_linie_3',
                opacity: 1,
                color: 'rgba(255,0,0,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 6.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_Projekt_aktuell_linie_3');
        map.getPane('pane_Projekt_aktuell_linie_3').style.zIndex = 403;
        map.getPane('pane_Projekt_aktuell_linie_3').style['mix-blend-mode'] = 'normal';
        var layer_Projekt_aktuell_linie_3 = new L.geoJson(json_Projekt_aktuell_linie_3, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Projekt_aktuell_linie_3',
            layerName: 'layer_Projekt_aktuell_linie_3',
            pane: 'pane_Projekt_aktuell_linie_3',
            onEachFeature: pop_Projekt_aktuell_linie_3,
            style: style_Projekt_aktuell_linie_3_0,
        });
        bounds_group.addLayer(layer_Projekt_aktuell_linie_3);
        map.addLayer(layer_Projekt_aktuell_linie_3);
        function pop_Projekt_aktuell_punkt_4(feature, layer) {
            layer.on({
                mouseout: function(e) {
                    for (i in e.target._eventParents) {
                        e.target._eventParents[i].resetStyle(e.target);
                    }
                },
                mouseover: highlightFeature,
            });
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">Streckennummer</th>\
                        <td>' + (feature.properties['Streckennummer'] !== null ? autolinker.link(feature.properties['Streckennummer'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Kilometer</th>\
                        <td>' + (feature.properties['Kilometer'] !== null ? autolinker.link(feature.properties['Kilometer'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Projektnummer</th>\
                        <td>' + (feature.properties['Projektnummer'] !== null ? autolinker.link(feature.properties['Projektnummer'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Auftraggeber</th>\
                        <td>' + (feature.properties['Auftraggeber'] !== null ? autolinker.link(feature.properties['Auftraggeber'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Auftragswert (netto)</th>\
                        <td>' + (feature.properties['Auftragswert (netto)'] !== null ? autolinker.link(feature.properties['Auftragswert (netto)'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Datum</th>\
                        <td>' + (feature.properties['Datum'] !== null ? autolinker.link(feature.properties['Datum'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Projektbezeichnung</th>\
                        <td>' + (feature.properties['Projektbezeichnung'] !== null ? autolinker.link(feature.properties['Projektbezeichnung'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Projekt_aktuell_punkt_4_0() {
            return {
                pane: 'pane_Projekt_aktuell_punkt_4',
                radius: 8.0,
                stroke: false,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(219,30,42,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Projekt_aktuell_punkt_4');
        map.getPane('pane_Projekt_aktuell_punkt_4').style.zIndex = 404;
        map.getPane('pane_Projekt_aktuell_punkt_4').style['mix-blend-mode'] = 'normal';
        var layer_Projekt_aktuell_punkt_4 = new L.geoJson(json_Projekt_aktuell_punkt_4, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Projekt_aktuell_punkt_4',
            layerName: 'layer_Projekt_aktuell_punkt_4',
            pane: 'pane_Projekt_aktuell_punkt_4',
            onEachFeature: pop_Projekt_aktuell_punkt_4,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.circleMarker(latlng, style_Projekt_aktuell_punkt_4_0(feature));
            },
        });
        var cluster_Projekt_aktuell_punkt_4 = new L.MarkerClusterGroup({showCoverageOnHover: false,
            spiderfyDistanceMultiplier: 2});
        cluster_Projekt_aktuell_punkt_4.addLayer(layer_Projekt_aktuell_punkt_4);

        bounds_group.addLayer(layer_Projekt_aktuell_punkt_4);
        cluster_Projekt_aktuell_punkt_4.addTo(map);
        var osmGeocoder = new L.Control.Geocoder({
            collapsed: true,
            position: 'topleft',
            text: 'Search',
            title: 'Testing'
        }).addTo(map);
        document.getElementsByClassName('leaflet-control-geocoder-icon')[0]
        .className += ' fa fa-search';
        document.getElementsByClassName('leaflet-control-geocoder-icon')[0]
        .title += 'Search for a place';
        var baseMaps = {};
        L.control.layers(baseMaps,{'<img src="legend/Projekt_aktuell_punkt_4.png" /> Projekt_aktuell_punkt': cluster_Projekt_aktuell_punkt_4,'<img src="legend/Projekt_aktuell_linie_3.png" /> Projekt_aktuell_linie': layer_Projekt_aktuell_linie_3,'<img src="legend/vg2500_bld_2.png" /> vg2500_bld': layer_vg2500_bld_2,"OpenRailwayMap": layer_OpenRailwayMap_1,"OpenStreetMap": layer_OpenStreetMap_0,}).addTo(map);
        setBounds();
        map.addControl(new L.Control.Search({
            layer: cluster_Projekt_aktuell_punkt_4,
            initial: false,
            hideMarkerOnCollapse: true,
            moveToLocation: function(latlng, title, map) {
                map.setView(latlng, 15);
            },
            propertyName: 'Streckennummer'}));
        document.getElementsByClassName('search-button')[0].className +=
         ' fa fa-binoculars';
        </script>
    </body>
</html>
